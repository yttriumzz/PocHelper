// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";

import "src/ExtractCalldata.sol";

contract ExtractCalldataTest is Test {
    ExtractCalldata extractCalldata;

    function setUp() public {
        extractCalldata = new ExtractCalldata();
    }

    function testSuccess() public view {
        // https://etherscan.io/tx/0x9b17da9fa313dda2c8807c5155576922f6ff2ac53bbbe7cf087b92302fa78d66
        bytes memory inputData = abi.encodePacked(hex"3593564c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000658e4e6b00000000000000000000000000000000000000000000000000000000000000020b080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000002c48eca79e358300000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000002c48eca79e3583000000000000000000000000000000000000000000000000174bf307241a21fd00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000b39aa417a391d3a6ba9c1c93cbed5875ece41a15");

        (bytes memory commands, bytes[] memory inputs, uint256 deadline) = abi.decode(extractCalldata.extractCalldata(inputData), (bytes, bytes[], uint256));

        // Avoid unused local variable warnings
        commands;
        inputs;
        deadline;
    }
}